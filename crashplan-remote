#!/bin/bash 

if [[ -n "$DEBUG" ]]; then
  set -x
  crashplan_output="cat"
  ssh_quiet=""
else
  crashplan_output="logger"
  ssh_quiet="-q"
fi
  
readonly UI_INFO="/Library/Application Support/CrashPlan/.ui_info"
readonly CRASHPLAN_APP="/Applications/CrashPlan.app/Contents/MacOS/CrashPlan"
readonly REMOTE_INFO="/tmp/crashplan-remote.$$.ui_info.remote"
readonly LOCAL_INFO="/tmp/crashplan-remote.$$.ui_info.local"
readonly SSHOPTS="-o ControlMaster=no -o ControlPersist=no $ssh_quiet"

RHOST=$1

die() {
  local message=$1
  echo "$message" 1>&2
  exit 1
}

check_usage() {
  if [[ -z "$RHOST" ]]; then   
    die "Usage: $0 remotehost"
  fi

  ps ax | grep --quiet 'CrashPlan.app/Contents/MacOS/CrashPla[n] ' && 
    die "It appears that CrashPlan is already running."
}

switch_files() {
  cp "$UI_INFO" "$LOCAL_INFO" || die "Couldn't back up ${UI_INFO}"

  # obtain ui_info from remote host
  for location in "$UI_INFO" "/var/lib/crashplan/.ui_info"; do
    if ssh $SSHOPTS $RHOST test -e "'$location'"; then
      scp $SSHOPTS "$RHOST:'$location'" "$REMOTE_INFO"
    fi
  done

  if ! [[ -e "$REMOTE_INFO" ]]; then
    die "Couldn't get remote ui_info file"
  fi

  mv "$REMOTE_INFO" "$UI_INFO"

  sed -i '' 's/^4243/4202/' "$UI_INFO"
}

build_tunnel() {
  /usr/bin/ssh $SSHOPTS -L4202:localhost:4243 -N -n -T -x $RHOST &
  ssh_pid=$!
}

cleanup() {
  # replace default .ui_info
  if [[ -e "$LOCAL_INFO" ]]; then
    mv "$LOCAL_INFO" "$UI_INFO"
  fi

  # close the ssh tunnel
  if [[ -n "$ssh_pid" ]]; then
    kill $ssh_pid  
  fi
}


trap cleanup EXIT

check_usage
switch_files
build_tunnel

# - here we call the executable directly so it runs in foreground -- starting
#   the .app bundle with open(1) will return immediately.
# - if the ssh tunnel failed, then so will $CRASHPLAN_APP, and the cleanup 
#   function will put everything back. this is, in my opinion,
#   more elegant than sleeping to see if the tunnel came up, since
#   CrashPlan, being Java, takes its good time starting up anyway.
"$CRASHPLAN_APP" 2>&1 | "$crashplan_output"
